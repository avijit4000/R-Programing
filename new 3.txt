
# In built functions in R
x <-1:3
sqrt(x)
x^2
mean(x)
sd(x)
x
#for loop

for(i in 1:5)
{
   print(i)
}



for (i in seq(1,6,2))
{print(i)}


#if else statement
a <- 2
if(a%%2==0)
  {print("even")}


for(i in 1:5){
  if(i==3)
  {next}
  print(i)
}

for(i in 1:5)
{
  if(i==3)
  {break}
  print(i)}

a <- 6
if(a%%2==0)
{print("even")}else 
{print("odd")}

#ifelse (one line execution and works with vectors )


A <- c(100,150, 120, 135)

if(A>110)
{print("Don't Buy")}else
{print("Buy")}

ifelse(A>110,"Don't Buy","Buy")


#Creating a user-defined function with multiple arguments

newfunction <- function(a,b,c,d)
{result <- a*b+c-d
print(result)
return(result)} 

# Write a program to print greatest of 3 numbers

newfunction(2,3,5,1)

# Some exercise

#Write a for loop that iterates over the numbers 1 to 7 and 
#prints the cube of each number using print().

for(i in 1:7)
{print(i^3)}




# Use a nested for loop (a for loop inside a for loop) that produces the following matrix, 
#pre-allocate the matrix with NA values.
# 
# 0     1     2     3     4
# 1     0     1     2     3
# 2     1     0     1     2
# 3     2     1     0     1
# 4     3     2     1     0




mat <- matrix(NA,nrow=5,ncol=5)

for (i in 1:4)
{ temp=1
  for (j in (i+1):5)
    { 
    mat[i,j]=temp
      mat[j,i]=temp
      temp=temp+1
    }
  mat[i,i]=0
  mat[5,5]=0
}
